generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int          @id @default(autoincrement())
  username         String       @unique
  email            String       @unique
  password         String
  branch           String
  role             String?      @default("admin")
  refreshToken     String?      @db.VarChar(255)
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  networkLogs      NetworkLog[]
}

model masterUser {
  id               Int          @id @default(autoincrement())
  empId            String       @unique @db.VarChar(20)
  role             String       @db.VarChar(50)
  name             String       @db.VarChar(100)
  email            String       @unique @db.VarChar(50)
  masterPassword   String?
  password         String?
  mobile           String       @db.VarChar(15)
  branch           String       @db.VarChar(50)
  status           String       @default("Active") @db.VarChar(10)
  refreshToken     String?      @db.Text
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  networkLogs      NetworkLog[]
}

model NetworkLog {
  id           Int         @id @default(autoincrement())
  userId       Int?
  masterUserId String?
  publicIp     String
  localIp      String
  macAddress   String
  username     String
  loggedAt     DateTime    @default(now())
  user         User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  masteruser   masterUser? @relation(fields: [masterUserId], references: [empId], onDelete: Cascade)
}

model Patient {
  patientId            String    @id @default(cuid())
  fullName             String?   @db.VarChar(100)
  dateOfBirth          DateTime?
  age                  Int?      @db.SmallInt
  gender               Gender?
  nationality          String?   @db.VarChar(50)
  email                String?   @unique @db.VarChar(50)
  maritalStatus        String?   @db.VarChar(20)
  visaType             String?   @db.VarChar(20)
  nationalId           String?   @unique @db.VarChar(20)
  otherIdType          String?   @db.VarChar(50)
  otherIdValue         String?   @db.VarChar(20)
  contactNumberMobile  String?   @db.VarChar(15)
  contactNumberWork    String?   @db.VarChar(15)
  consultationType     String?   @db.VarChar(50)
  doctorName           String?   @db.VarChar(100)
  appointmentDate      DateTime?
  speciality           String?   @db.VarChar(50)
  consultationReason   String?   @db.VarChar(200)
  paymentType          String?   @db.VarChar(50)
  insurancePlan        String?   @db.VarChar(50)
  policyNumber         String?   @db.VarChar(50)
  policyExpiryDate     DateTime?
  insuranceCardNumber  String?   @db.VarChar(50)
  insuranceProvider    String?   @db.VarChar(100)
  insuranceSubProvider String?   @db.VarChar(100)
  customFields         Json?
}

enum Gender {
  Male
  Female
  Other
}
