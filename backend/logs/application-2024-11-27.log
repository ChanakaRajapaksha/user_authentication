{"level":"info","message":{"action":"findUnique","duration":"722ms","model":"Patient"},"timestamp":"2024-11-27T07:24:55.150Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T07:24:55.225Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.contactNumber.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:56:58\n\n  53 }\n  54 \n  55 // Create ContactNumber records for mobile and work\n→ 56 const mobileContact = await prisma.contactNumber.create({\n       data: {\n         number: undefined,\n     +   countryCode: String\n       }\n     })\n\nArgument `countryCode` is missing.","timestamp":"2024-11-27T07:24:55.450Z"}
{"level":"info","message":{"action":"findUnique","duration":"104ms","model":"Patient"},"timestamp":"2024-11-27T07:48:43.539Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T07:48:43.543Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T07:48:55.149Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T07:48:55.151Z"}
{"level":"info","message":{"action":"create","duration":"140ms","model":"ContactNumber"},"timestamp":"2024-11-27T07:48:55.291Z"}
{"level":"info","message":{"action":"create","duration":"3ms","model":"ContactNumber"},"timestamp":"2024-11-27T07:48:55.295Z"}
{"level":"info","message":{"action":"create","duration":"55ms","model":"Patient"},"timestamp":"2024-11-27T07:48:55.350Z"}
{"level":"info","message":"Patient registered: john@example.com","timestamp":"2024-11-27T07:48:55.350Z"}
{"level":"info","message":{"action":"findUnique","duration":"3ms","model":"Patient"},"timestamp":"2024-11-27T07:51:08.565Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T07:51:08.567Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.contactNumber.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:55:58\n\n  52 }\n  53 \n  54 // Create ContactNumber records for mobile and work\n→ 55 const mobileContact = await prisma.contactNumber.create(\nThe table `contactnumber` does not exist in the current database.","timestamp":"2024-11-27T07:51:08.671Z"}
{"level":"info","message":{"action":"findUnique","duration":"13ms","model":"Patient"},"timestamp":"2024-11-27T07:53:21.724Z"}
{"level":"info","message":{"action":"findUnique","duration":"3ms","model":"Patient"},"timestamp":"2024-11-27T07:53:21.729Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.patient.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:62:49\n\n  59         (currentDate.getMonth() === birthDate.getMonth() && currentDate.getDate() < birthDate.getDate()) ? 1 : 0);\n  60 \n  61 // Create the new patient record\n→ 62 const newPatient = await prisma.patient.create({\n       data: {\n         fullName: \"John Doe\",\n         dateOfBirth: new Date(\"1985-06-15T00:00:00.000Z\"),\n         age: 39,\n         gender: \"MALE\",\n         nationality: \"Sri Lankan\",\n         email: \"john@example.com\",\n         maritalStatus: \"Single\",\n         visaType: \"Tourist\",\n         nationalId: \"123456789V\",\n         otherIdType: \"Driving License\",\n         otherIdValue: \"DL-987654321\",\n         contactNumberMobile: \"+94715264449\",\n         contactNumberWork: \"+94713435001\",\n     +   mobileContactId: String\n       }\n     })\n\nArgument `mobileContactId` is missing.","timestamp":"2024-11-27T07:53:21.744Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.patient.findUnique()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:38:53\n\n  35 \n  36 try {\n  37     // Check for duplicate email or national ID in the database\n→ 38     const duplicateEmail = await prisma.patient.findUnique(\nThe column `auth_db.Patient.mobileContactId` does not exist in the current database.","timestamp":"2024-11-27T07:55:01.052Z"}
{"level":"info","message":{"action":"findUnique","duration":"15ms","model":"Patient"},"timestamp":"2024-11-27T07:58:30.548Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T07:58:30.551Z"}
{"level":"info","message":{"action":"create","duration":"5ms","model":"Patient"},"timestamp":"2024-11-27T07:58:30.556Z"}
{"level":"info","message":"Patient registered: johndoe@example.com","timestamp":"2024-11-27T07:58:30.556Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T07:58:49.171Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T07:58:49.172Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.patient.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:62:49\n\n  59         (currentDate.getMonth() === birthDate.getMonth() && currentDate.getDate() < birthDate.getDate()) ? 1 : 0);\n  60 \n  61 // Create the new patient record\n→ 62 const newPatient = await prisma.patient.create({\n       data: {\n         fullName: \"Chanaka Rajapaksha \",\n         dateOfBirth: new Date(\"2024-11-27T00:00:00.000Z\"),\n         age: 0,\n         gender: \"Male\",\n                 ~~~~~~\n         nationality: \"Sri Lankan\",\n         email: \"chanakaprasath456@gmail.com\",\n         maritalStatus: \"Single\",\n         visaType: \"Tourist\",\n         nationalId: \"992051060V\",\n         otherIdType: \"Driver's License\",\n         otherIdValue: \"DL987654321\",\n         contactNumberMobile: \"+94715264449\",\n         contactNumberWork: \"+94713435001\"\n       }\n     })\n\nInvalid value for argument `gender`. Expected Gender.","timestamp":"2024-11-27T07:58:49.269Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T07:59:14.283Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T07:59:14.285Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.patient.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:62:49\n\n  59         (currentDate.getMonth() === birthDate.getMonth() && currentDate.getDate() < birthDate.getDate()) ? 1 : 0);\n  60 \n  61 // Create the new patient record\n→ 62 const newPatient = await prisma.patient.create({\n       data: {\n         fullName: \"Chanaka Rajapaksha \",\n         dateOfBirth: new Date(\"2024-11-27T00:00:00.000Z\"),\n         age: 0,\n         gender: \"Male\",\n                 ~~~~~~\n         nationality: \"Sri Lankan\",\n         email: \"chanakaprasath456@gmail.com\",\n         maritalStatus: \"Single\",\n         visaType: \"Tourist\",\n         nationalId: \"992051060V\",\n         otherIdType: \"Driver's License\",\n         otherIdValue: \"DL987654321\",\n         contactNumberMobile: \"+94715264449\",\n         contactNumberWork: \"+94713435001\"\n       }\n     })\n\nInvalid value for argument `gender`. Expected Gender.","timestamp":"2024-11-27T07:59:14.289Z"}
{"level":"info","message":{"action":"findUnique","duration":"3ms","model":"Patient"},"timestamp":"2024-11-27T08:02:07.113Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T08:02:07.115Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.patient.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:62:49\n\n  59         (currentDate.getMonth() === birthDate.getMonth() && currentDate.getDate() < birthDate.getDate()) ? 1 : 0);\n  60 \n  61 // Create the new patient record\n→ 62 const newPatient = await prisma.patient.create({\n       data: {\n         fullName: \"Chanaka Rajapaksha \",\n         dateOfBirth: new Date(\"2024-11-27T00:00:00.000Z\"),\n         age: 0,\n         gender: \"Male\",\n                 ~~~~~~\n         nationality: \"Sri Lankan\",\n         email: \"chanakaprasath456@gmail.com\",\n         maritalStatus: \"Single\",\n         visaType: \"Tourist\",\n         nationalId: \"992051060V\",\n         otherIdType: \"Driver's License\",\n         otherIdValue: \"DL987654321\",\n         contactNumberMobile: \"+94715264449\",\n         contactNumberWork: \"+94713435001\"\n       }\n     })\n\nInvalid value for argument `gender`. Expected Gender.","timestamp":"2024-11-27T08:02:07.148Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T08:02:20.155Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T08:02:20.156Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.patient.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:62:49\n\n  59         (currentDate.getMonth() === birthDate.getMonth() && currentDate.getDate() < birthDate.getDate()) ? 1 : 0);\n  60 \n  61 // Create the new patient record\n→ 62 const newPatient = await prisma.patient.create({\n       data: {\n         fullName: \"Chanaka Rajapaksha \",\n         dateOfBirth: new Date(\"2024-11-27T00:00:00.000Z\"),\n         age: 0,\n         gender: \"Female\",\n                 ~~~~~~~~\n         nationality: \"Sri Lankan\",\n         email: \"chanakaprasath456@gmail.com\",\n         maritalStatus: \"Single\",\n         visaType: \"Tourist\",\n         nationalId: \"992051060V\",\n         otherIdType: \"Driver's License\",\n         otherIdValue: \"DL987654321\",\n         contactNumberMobile: \"+94715264449\",\n         contactNumberWork: \"+94713435001\"\n       }\n     })\n\nInvalid value for argument `gender`. Expected Gender.","timestamp":"2024-11-27T08:02:20.159Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T08:02:48.081Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.patient.findUnique()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:42:58\n\n  39     where: { email },\n  40 });\n  41 \n→ 42 const duplicateNationalId = await prisma.patient.findUnique(\nValue 'Male' not found in enum 'Gender'","timestamp":"2024-11-27T08:02:48.105Z"}
{"level":"info","message":{"action":"findUnique","duration":"11ms","model":"Patient"},"timestamp":"2024-11-27T08:34:45.188Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T08:34:45.192Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T08:34:52.158Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T08:34:52.160Z"}
{"level":"info","message":{"action":"create","duration":"5ms","model":"Patient"},"timestamp":"2024-11-27T08:34:52.166Z"}
{"level":"info","message":"Patient registered: chanaka@example.com","timestamp":"2024-11-27T08:34:52.166Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T08:34:57.249Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T08:34:57.250Z"}
{"level":"info","message":{"action":"create","duration":"4ms","model":"Patient"},"timestamp":"2024-11-27T08:34:57.254Z"}
{"level":"info","message":"Patient registered: chanakaprasath456@gmail.com","timestamp":"2024-11-27T08:34:57.255Z"}
{"level":"info","message":{"action":"findUnique","duration":"19ms","model":"Patient"},"timestamp":"2024-11-27T08:42:52.245Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T08:42:52.247Z"}
{"level":"info","message":{"action":"create","duration":"4ms","model":"Patient"},"timestamp":"2024-11-27T08:42:52.251Z"}
{"level":"info","message":"Patient registered: chanakaprasath456@gmail.com","timestamp":"2024-11-27T08:42:52.251Z"}
{"level":"info","message":{"action":"findUnique","duration":"10ms","model":"Patient"},"timestamp":"2024-11-27T09:04:35.471Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T09:04:35.475Z"}
{"level":"info","message":{"action":"create","duration":"4ms","model":"Patient"},"timestamp":"2024-11-27T09:04:35.480Z"}
{"level":"info","message":"Patient registered: chanaka@example.com","timestamp":"2024-11-27T09:04:35.480Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T09:04:43.033Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T09:04:43.035Z"}
{"level":"info","message":{"action":"create","duration":"52ms","model":"Patient"},"timestamp":"2024-11-27T09:04:43.087Z"}
{"level":"info","message":"Patient registered: chanakaprasath456@gmail.com","timestamp":"2024-11-27T09:04:43.088Z"}
{"level":"info","message":{"action":"findUnique","duration":"145ms","model":"Patient"},"timestamp":"2024-11-27T11:23:08.740Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T11:23:08.823Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-27T11:23:18.395Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"Patient"},"timestamp":"2024-11-27T11:23:18.397Z"}
{"level":"info","message":{"action":"create","duration":"13ms","model":"Patient"},"timestamp":"2024-11-27T11:23:18.410Z"}
{"level":"info","message":"Patient registered: chanakaprasath4565555@gmail.com","timestamp":"2024-11-27T11:23:18.410Z"}
{"level":"info","message":{"action":"findUnique","duration":"14ms","model":"Patient"},"timestamp":"2024-11-27T12:08:21.470Z"}
{"level":"info","message":{"action":"findUnique","duration":"3ms","model":"Patient"},"timestamp":"2024-11-27T12:08:21.475Z"}
{"level":"info","message":{"action":"create","duration":"42ms","model":"Patient"},"timestamp":"2024-11-27T12:08:21.517Z"}
{"level":"info","message":"Patient registered: rajapaksha@example.com","timestamp":"2024-11-27T12:08:21.518Z"}
