{"level":"info","message":{"action":"findUnique","duration":"472ms","model":"User"},"timestamp":"2024-11-26T03:50:54.695Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"User"},"timestamp":"2024-11-26T03:50:54.699Z"}
{"level":"error","message":"Error during registration: \nInvalid `prisma.user.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\registerController.js:31:43\n\n  28 const hashedPassword = await bcrypt.hash(password, 10);\n  29 \n  30 // Create the new user\n→ 31 const newUser = await prisma.user.create({\n       data: {\n         username: \"Chanaka Rajapaksha\",\n         email: \"rcprajapaksha123@gmail.com\",\n         password: \"$2b$10$Jgay2txJEZVGCNhZebJgIOnIDWT3itBqSWj6dpiz8JgUfoBNNqvJ.\",\n         role: \"admin\",\n     +   branch: String\n       }\n     })\n\nArgument `branch` is missing.","timestamp":"2024-11-26T03:50:54.794Z"}
{"level":"info","message":{"action":"findUnique","duration":"3ms","model":"User"},"timestamp":"2024-11-26T03:52:22.574Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"User"},"timestamp":"2024-11-26T03:52:22.576Z"}
{"level":"error","message":"Error during registration: \nInvalid `prisma.user.create()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\registerController.js:31:43\n\n  28 const hashedPassword = await bcrypt.hash(password, 10);\n  29 \n  30 // Create the new user\n→ 31 const newUser = await prisma.user.create({\n       data: {\n         username: \"Chanaka Rajapaksha\",\n         email: \"rcprajapaksha123@gmail.com\",\n         password: \"$2b$10$QJmxCDI9As7MCiAbZ9Lvkez1Q0TETqqUImwLfJhgMsUkpUOIZLSsa\",\n         role: \"admin\",\n     +   branch: String\n       }\n     })\n\nArgument `branch` is missing.","timestamp":"2024-11-26T03:52:22.644Z"}
{"level":"info","message":{"action":"findUnique","duration":"16ms","model":"User"},"timestamp":"2024-11-26T06:16:00.094Z"}
{"level":"info","message":{"action":"findUnique","duration":"3ms","model":"User"},"timestamp":"2024-11-26T06:16:00.099Z"}
{"level":"info","message":{"action":"create","duration":"220ms","model":"User"},"timestamp":"2024-11-26T06:16:00.382Z"}
{"level":"info","message":"User registered: rcprajapaksha123@gmail.com","timestamp":"2024-11-26T06:16:00.382Z"}
{"level":"info","message":{"action":"findFirst","duration":"149ms","model":"User"},"timestamp":"2024-11-26T06:30:06.809Z"}
{"level":"info","message":{"action":"update","duration":"87ms","model":"User"},"timestamp":"2024-11-26T06:30:06.993Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"User"},"timestamp":"2024-11-26T06:30:37.747Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"User"},"timestamp":"2024-11-26T06:32:17.313Z"}
{"level":"info","message":{"action":"findFirst","duration":"1ms","model":"User"},"timestamp":"2024-11-26T06:34:04.918Z"}
{"level":"info","message":{"action":"create","duration":"30ms","model":"Otp"},"timestamp":"2024-11-26T06:34:05.014Z"}
{"level":"info","message":{"action":"findUnique","duration":"3ms","model":"User"},"timestamp":"2024-11-26T06:34:29.576Z"}
{"level":"info","message":{"action":"findFirst","duration":"58ms","model":"Otp"},"timestamp":"2024-11-26T06:34:29.634Z"}
{"level":"info","message":{"action":"delete","duration":"14ms","model":"Otp"},"timestamp":"2024-11-26T06:34:29.648Z"}
{"level":"info","message":{"action":"update","duration":"3ms","model":"User"},"timestamp":"2024-11-26T06:34:29.654Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"User"},"timestamp":"2024-11-26T06:34:45.098Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"User"},"timestamp":"2024-11-26T06:34:55.924Z"}
{"level":"info","message":{"action":"findUnique","duration":"12ms","model":"User"},"timestamp":"2024-11-26T06:40:52.687Z"}
{"level":"info","message":{"action":"update","duration":"4ms","model":"User"},"timestamp":"2024-11-26T06:40:52.692Z"}
{"level":"info","message":{"action":"findFirst","duration":"2ms","model":"User"},"timestamp":"2024-11-26T06:41:29.813Z"}
{"level":"info","message":{"action":"update","duration":"4ms","model":"User"},"timestamp":"2024-11-26T06:41:29.879Z"}
{"level":"info","message":{"action":"findFirst","duration":"2ms","model":"User"},"timestamp":"2024-11-26T06:42:20.749Z"}
{"level":"info","message":{"action":"create","duration":"6ms","model":"Otp"},"timestamp":"2024-11-26T06:42:20.821Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"User"},"timestamp":"2024-11-26T06:42:43.588Z"}
{"level":"info","message":{"action":"findFirst","duration":"2ms","model":"Otp"},"timestamp":"2024-11-26T06:42:43.590Z"}
{"level":"info","message":{"action":"delete","duration":"2ms","model":"Otp"},"timestamp":"2024-11-26T06:42:43.592Z"}
{"level":"info","message":{"action":"update","duration":"4ms","model":"User"},"timestamp":"2024-11-26T06:42:43.599Z"}
{"level":"info","message":{"action":"findFirst","duration":"10ms","model":"User"},"timestamp":"2024-11-26T07:00:48.052Z"}
{"level":"info","message":{"action":"create","duration":"3ms","model":"Otp"},"timestamp":"2024-11-26T07:00:48.116Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"User"},"timestamp":"2024-11-26T07:01:07.895Z"}
{"level":"info","message":{"action":"findFirst","duration":"1ms","model":"Otp"},"timestamp":"2024-11-26T07:01:07.897Z"}
{"level":"info","message":{"action":"delete","duration":"2ms","model":"Otp"},"timestamp":"2024-11-26T07:01:07.900Z"}
{"level":"info","message":{"action":"update","duration":"4ms","model":"User"},"timestamp":"2024-11-26T07:01:07.907Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"User"},"timestamp":"2024-11-26T07:01:07.919Z"}
{"level":"info","message":{"action":"findFirst","duration":"1ms","model":"User"},"timestamp":"2024-11-26T07:02:06.630Z"}
{"level":"info","message":{"action":"update","duration":"6ms","model":"User"},"timestamp":"2024-11-26T07:02:06.698Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"User"},"timestamp":"2024-11-26T07:02:06.710Z"}
{"level":"info","message":{"action":"findFirst","duration":"5ms","model":"User"},"timestamp":"2024-11-26T07:14:52.154Z"}
{"level":"info","message":{"action":"update","duration":"3ms","model":"User"},"timestamp":"2024-11-26T07:14:52.219Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"User"},"timestamp":"2024-11-26T07:14:52.230Z"}
{"level":"info","message":{"action":"findFirst","duration":"2ms","model":"User"},"timestamp":"2024-11-26T07:15:09.056Z"}
{"level":"info","message":{"action":"update","duration":"4ms","model":"User"},"timestamp":"2024-11-26T07:15:09.120Z"}
{"level":"info","message":{"action":"findUnique","duration":"1ms","model":"User"},"timestamp":"2024-11-26T07:15:09.129Z"}
{"level":"error","message":"Error during patient registration: \nInvalid `prisma.patient.findUnique()` invocation in\nD:\\Projects\\user_authentication\\backend\\controllers\\patientRegisterController.js:38:53\n\n  35 \n  36 try {\n  37     // Check for duplicate email or national ID in the database\n→ 38     const duplicateEmail = await prisma.patient.findUnique({\n           where: {\n             email: \"johndoe@example.com\",\n         ?   patientId?: String,\n         ?   AND?: PatientWhereInput | PatientWhereInput[],\n         ?   OR?: PatientWhereInput[],\n         ?   NOT?: PatientWhereInput | PatientWhereInput[],\n         ?   fullName?: StringFilter | String,\n         ?   dateOfBirth?: DateTimeFilter | DateTime,\n         ?   age?: IntFilter | Int,\n         ?   gender?: EnumGenderFilter | Gender,\n         ?   nationality?: StringFilter | String,\n         ?   maritalStatus?: StringFilter | String,\n         ?   visaType?: StringFilter | String,\n         ?   nationalId?: StringFilter | String,\n         ?   otherIdType?: StringNullableFilter | String | Null,\n         ?   otherIdValue?: StringNullableFilter | String | Null,\n         ?   mobileContactId?: StringFilter | String,\n         ?   workContactId?: StringNullableFilter | String | Null,\n         ?   contactNumberMobile?: ContactNumberRelationFilter | ContactNumberWhereInput,\n         ?   contactNumberWork?: ContactNumberNullableRelationFilter | ContactNumberWhereInput | Null\n           }\n         })\n\nArgument `where` of type PatientWhereUniqueInput needs at least one of `patientId` arguments. Available options are marked with ?.","timestamp":"2024-11-26T09:28:50.429Z"}
{"level":"info","message":{"action":"findUnique","duration":"12ms","model":"Patient"},"timestamp":"2024-11-26T09:32:44.146Z"}
{"level":"info","message":{"action":"findUnique","duration":"2ms","model":"Patient"},"timestamp":"2024-11-26T09:32:44.151Z"}
{"level":"info","message":{"action":"create","duration":"89ms","model":"ContactNumber"},"timestamp":"2024-11-26T09:32:44.241Z"}
{"level":"info","message":{"action":"create","duration":"2ms","model":"ContactNumber"},"timestamp":"2024-11-26T09:32:44.244Z"}
{"level":"info","message":{"action":"create","duration":"12ms","model":"Patient"},"timestamp":"2024-11-26T09:32:44.257Z"}
{"level":"info","message":"Patient registered: johndoe@example.com","timestamp":"2024-11-26T09:32:44.258Z"}
